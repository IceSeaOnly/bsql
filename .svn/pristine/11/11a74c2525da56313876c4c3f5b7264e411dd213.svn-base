package binghai;

import sun.org.mozilla.javascript.internal.ObjArray;

import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;

/**
 * Created by sdust on 2016/12/9.
 * 支持的存储类型定义
 */
public class SupportType {
    private static Map<String,Class> table = null;
    private static void initMap(){
        table = new HashMap<String, Class>();
        table.put("int",Integer.class);
        table.put("double",Double.class);
        table.put("float",Float.class);
        table.put("boolean",Boolean.class);
        table.put("string",String.class);
        table.put("char",char.class);
        table.put("smallint",int.class);
    }

    /** 根据类型名查询是否为支持的类型*/
    public static Result isSupport(String typename){
        if(table == null) initMap();
        Set<String> names = table.keySet();
        Iterator it = names.iterator();
        while(it.hasNext()){
            if(it.next().equals(typename))
                    return new Result(true,null,"支持"+typename+"类型.");
        }
        return new Result(false,null,"不支持"+typename+"类型.");
    }

    /** 根据类型名返回对应的类型*/
    public static Class getClassByName(String className) throws RunTimeError{
        if(table == null) initMap();
        Set<String> names = table.keySet();
        Iterator it = names.iterator();
        while(it.hasNext()){
            if(it.next().equals(className))
                return table.get(className);
        }
        throw new RunTimeError("发现不支持的"+className+"类型");
    }

    /** 获取所有支持的类型*/
    public static String[] getAllSupportType(){
        if(table == null) initMap();
        Set<String> names = table.keySet();
        return names.toArray(new String[]{});
    }
}
